{"mappings":"ACEA,IAAM,EAAe,IAAI,QAAQ,SAAC,CAAA,CAAS,CAA3C,EACE,SAAS,gBAAgB,CAAC,YAAa,SAAC,CAAxC,EAC4B,IAAtB,EAAW,MAAM,EACnB,EAAQ,6BAEZ,GAEA,WAAW,WACT,EAAO,AAAI,MAAM,8BACnB,EAAG,IACL,GAEM,EAAgB,IAAI,QAAQ,SAAC,CAAA,CAAS,CAA5C,EACE,SAAS,gBAAgB,CAAC,YAAa,SAAC,CAAxC,EACM,CAAA,AAAsB,IAAtB,EAAW,MAAM,EAAU,AAAsB,IAAtB,EAAW,MAAM,AAAK,GACnD,EAAQ,8BAEZ,EACF,GAEM,EAAe,IAAI,QAAQ,SAAC,CAAA,CAAS,CAA3C,EACE,IAAI,EAAc,CAAA,EACd,EAAe,CAAA,EAEnB,SAAS,gBAAgB,CAAC,YAAa,SAAC,CAAxC,EACM,AAAsB,IAAtB,EAAW,MAAM,CACnB,EAAc,CAAA,EACiB,IAAtB,EAAW,MAAM,EAC1B,CAAA,EAAe,CAAA,CADV,EAIH,GAAe,GACjB,EAAQ,6BAEZ,EACF,GAEM,EAAiB,SAAC,CAAxB,EACE,IAAM,EAAe,SAAS,aAAa,CAAC,OAE5C,EAAa,YAAY,CAAC,UAAW,gBACrC,EAAa,SAAS,CAAG,UACzB,EAAa,WAAW,CAAG,EAC3B,SAAS,IAAI,CAAC,WAAW,CAAC,EAC5B,EAEM,EAAe,SAAC,CAAtB,EACE,IAAM,EAAe,SAAS,aAAa,CAAC,OAE5C,EAAa,YAAY,CAAC,UAAW,gBACrC,EAAa,SAAS,CAAG,QACzB,EAAa,WAAW,CAAG,EAAM,OAAO,CACxC,SAAS,IAAI,CAAC,WAAW,CAAC,EAC5B,EAEA,EAAa,IAAI,CAAC,GAAgB,KAAK,CAAC,GACxC,EAAc,IAAI,CAAC,GAAgB,KAAK,CAAC,GACzC,EAAa,IAAI,CAAC,GAAgB,KAAK,CAAC","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nvar firstPromise = new Promise(function(resolve, reject) {\n    document.addEventListener(\"mousedown\", function(mouseEvent) {\n        if (mouseEvent.button === 0) resolve(\"First promise was resolved\");\n    });\n    setTimeout(function() {\n        reject(new Error(\"First promise was rejected\"));\n    }, 3000);\n});\nvar secondPromise = new Promise(function(resolve, reject) {\n    document.addEventListener(\"mousedown\", function(mouseEvent) {\n        if (mouseEvent.button === 0 || mouseEvent.button === 2) resolve(\"Second promise was resolved\");\n    });\n});\nvar thirdPromise = new Promise(function(resolve, reject) {\n    var leftClicked = false;\n    var rightClicked = false;\n    document.addEventListener(\"mousedown\", function(mouseEvent) {\n        if (mouseEvent.button === 0) leftClicked = true;\n        else if (mouseEvent.button === 2) rightClicked = true;\n        if (leftClicked && rightClicked) resolve(\"Third promise was resolved\");\n    });\n});\nvar successHandler = function(message) {\n    var notification = document.createElement(\"div\");\n    notification.setAttribute(\"data-qa\", \"notification\");\n    notification.className = \"success\";\n    notification.textContent = message;\n    document.body.appendChild(notification);\n};\nvar errorHandler = function(error) {\n    var notification = document.createElement(\"div\");\n    notification.setAttribute(\"data-qa\", \"notification\");\n    notification.className = \"error\";\n    notification.textContent = error.message;\n    document.body.appendChild(notification);\n};\nfirstPromise.then(successHandler).catch(errorHandler);\nsecondPromise.then(successHandler).catch(errorHandler);\nthirdPromise.then(successHandler).catch(errorHandler);\n\n//# sourceMappingURL=index.d6257938.js.map\n","'use strict';\n\nconst firstPromise = new Promise((resolve, reject) => {\n  document.addEventListener('mousedown', (mouseEvent) => {\n    if (mouseEvent.button === 0) {\n      resolve('First promise was resolved');\n    }\n  });\n\n  setTimeout(() => {\n    reject(new Error('First promise was rejected'));\n  }, 3000);\n});\n\nconst secondPromise = new Promise((resolve, reject) => {\n  document.addEventListener('mousedown', (mouseEvent) => {\n    if (mouseEvent.button === 0 || mouseEvent.button === 2) {\n      resolve('Second promise was resolved');\n    }\n  });\n});\n\nconst thirdPromise = new Promise((resolve, reject) => {\n  let leftClicked = false;\n  let rightClicked = false;\n\n  document.addEventListener('mousedown', (mouseEvent) => {\n    if (mouseEvent.button === 0) {\n      leftClicked = true;\n    } else if (mouseEvent.button === 2) {\n      rightClicked = true;\n    }\n\n    if (leftClicked && rightClicked) {\n      resolve('Third promise was resolved');\n    }\n  });\n});\n\nconst successHandler = (message) => {\n  const notification = document.createElement('div');\n\n  notification.setAttribute('data-qa', 'notification');\n  notification.className = 'success';\n  notification.textContent = message;\n  document.body.appendChild(notification);\n};\n\nconst errorHandler = (error) => {\n  const notification = document.createElement('div');\n\n  notification.setAttribute('data-qa', 'notification');\n  notification.className = 'error';\n  notification.textContent = error.message;\n  document.body.appendChild(notification);\n};\n\nfirstPromise.then(successHandler).catch(errorHandler);\nsecondPromise.then(successHandler).catch(errorHandler);\nthirdPromise.then(successHandler).catch(errorHandler);\n"],"names":["firstPromise","Promise","resolve","reject","document","addEventListener","mouseEvent","button","setTimeout","Error","secondPromise","thirdPromise","leftClicked","rightClicked","successHandler","message","notification","createElement","setAttribute","className","textContent","body","appendChild","errorHandler","error","then","catch"],"version":3,"file":"index.d6257938.js.map"}